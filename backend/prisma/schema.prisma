// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())

    username String @unique
    password String

    email       String  @unique
    emailStatus Boolean @default(false)

    firstName String?
    lastName  String?
    bio       String?

    profileImagePath String?

    Session Session[]

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Users")
}

model Session {
    id String @id @default(uuid())

    ip     String
    device String

    user   User   @relation(fields: [userId], references: [id])
    userId String

    expirationDate DateTime

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Sessions")
}

model writing {
    id String @id @default(uuid())

    taskType Int

    thesis String
    path   String?

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Writings")
}

model Reading {
    id String @id @default(uuid())

    text String

    test   Test   @relation(fields: [testId], references: [id])
    testId String @unique

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Readings")
}

model Listening {
    id String @id @default(uuid())

    audioPath String

    test   Test   @relation(fields: [testId], references: [id])
    testId String @unique

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Listenings")
}

model Speaking {
    id String @id @default(uuid())

    thesis String

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Speakings")
}

model Test {
    id String @id @default(uuid())

    quesion String

    reading   Reading?
    listening Listening?

    answers Answer[]

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Tests")
}

model Answer {
    id String @id @default(uuid())

    text      String
    isCorrect Boolean

    Test   Test   @relation(fields: [testId], references: [id])
    testId String

    createdAt DateTime @default(now())
    alteredAt DateTime @default(now()) @updatedAt

    @@map("Answers")
}
